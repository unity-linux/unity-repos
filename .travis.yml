sudo: required
language: bash
services:
- docker
install: true
before_install:
- openssl aes-256-cbc -K $encrypted_76ef2fe558b5_key -iv $encrypted_76ef2fe558b5_iv -in .stuff.tar.gz.enc -out stuff.tar.gz -d
- file stuff.tar.gz
- tar xzvf stuff.tar.gz -C /tmp/
- eval "$(ssh-agent -s)"
- chmod 600 /tmp/stuff/.deploy
- ssh-add /tmp/stuff/.deploy
- mv /tmp/stuff/.host ~/.ssh/config
- docker pull jmiahman/mageia-rpmbuilder
env:
- MOCK_CONFIG="mageia-cauldron-i586"
- MOCK_CONFIG="mageia-cauldron-x86_64"
script:
- RPM_ARCH=$(echo $MOCK_CONFIG|cut -d '-' -f3)
- export DID=$(docker image ls | grep -m1 mageia-rpmbuilder | awk '{print $3}')
- echo $DID
- docker run --privileged=true -e MOCK_CONFIG=${MOCK_CONFIG} -d -v "$(pwd):/rpmbuild" -v "/dev:/dev" $DID tail -f /dev/null
- export CID=$(docker ps -l | awk '{print $1}' | grep -v -m1 'CONTAINER')
- echo $CID
- docker exec $CID /bin/sh -c 'cd /rpmbuild && rpmbuilder'
- find ./SRPMS -name *.src.rpm
- find ./RPMS -name *.{RPM_ARCH}.rpm
- find ./RPMS -name *.noarch.rpm
after_success:
- sudo -H pip install --upgrade pyOpenSSL ndg-httpsclient pyasn1 requests[security] jinja2 marshmallow copr-cli simplejson
- scp -o StrictHostKeyChecking=no $(find ./RPMS -name "*.rpm" -print) foobar2:rpm_staging/Unity-Linux/${RPM_ARCH}/
- scp -o StrictHostKeyChecking=no $(find ./SRPMS -name "*.rpm" -print) foobar2:rpm_staging/Unity-Linux/src/
- ssh -o StrictHostKeyChecking=no foobar2 'sh ~/bin/down_copr'
